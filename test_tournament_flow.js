// Teste para verificar o fluxo ap√≥s sorteio de duplas
// Este arquivo testa a l√≥gica de exibi√ß√£o ap√≥s o sorteio

console.log('üß™ Teste: Verifica√ß√£o do fluxo ap√≥s sorteio');

// Simular dados ap√≥s sorteio
const simulatedTournamentData = {
  id: 'test-tournament-123',
  status: 'CREATED',
  matches: [], // Ainda n√£o h√° matches criadas
  teams_data: [
    { id: '1', players: ['Player 1', 'Player 2'] },
    { id: '2', players: ['Player 3', 'Player 4'] },
    { id: '3', players: ['Player 5', 'Player 6'] },
    { id: '4', players: ['Player 7', 'Player 8'] }
  ],
  groups_data: [
    { id: 1, name: 'Grupo A', teams: ['1', '2'] },
    { id: 2, name: 'Grupo B', teams: ['3', '4'] }
  ],
  matches_data: [],
  standings_data: []
};

// Fun√ß√£o para testar a l√≥gica de detec√ß√£o de dados do sorteio
function testHasDataFromDraw(tournament) {
  return tournament && (
    (tournament.teams_data && tournament.teams_data.length > 0) ||
    (tournament.groups_data && tournament.groups_data.length > 0) ||
    (tournament.matches_data && tournament.matches_data.length > 0) ||
    (tournament.standings_data && tournament.standings_data.length > 0)
  );
}

// Fun√ß√£o para testar se o torneio tem dados
function testTournamentHasData(tournament) {
  const hasDataFromDraw = testHasDataFromDraw(tournament);
  
  return tournament && (
    tournament.matches.length > 0 || 
    tournament.status === 'CREATED' ||
    hasDataFromDraw
  );
}

// Executar testes
const hasDataFromDraw = testHasDataFromDraw(simulatedTournamentData);
const tournamentHasData = testTournamentHasData(simulatedTournamentData);

console.log('üìä Resultados do teste:');
console.log(`- Dados do sorteio detectados: ${hasDataFromDraw ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
console.log(`- Torneio deve mostrar dados: ${tournamentHasData ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
console.log(`- Status do torneio: ${simulatedTournamentData.status}`);
console.log(`- N√∫mero de matches: ${simulatedTournamentData.matches.length}`);
console.log(`- Teams data: ${simulatedTournamentData.teams_data.length} times`);
console.log(`- Groups data: ${simulatedTournamentData.groups_data.length} grupos`);

// Teste sem dados do sorteio
const emptyTournamentData = {
  id: 'test-tournament-456',
  status: 'PENDING',
  matches: [],
  teams_data: null,
  groups_data: null,
  matches_data: null,
  standings_data: null
};

const emptyHasDataFromDraw = testHasDataFromDraw(emptyTournamentData);
const emptyTournamentHasData = testTournamentHasData(emptyTournamentData);

console.log('\nüìä Teste com torneio vazio:');
console.log(`- Dados do sorteio detectados: ${emptyHasDataFromDraw ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
console.log(`- Torneio deve mostrar dados: ${emptyTournamentHasData ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);

console.log('\nüéØ Conclus√£o:');
if (hasDataFromDraw && tournamentHasData) {
  console.log('‚úÖ SUCESSO: Ap√≥s o sorteio, o sistema deve mostrar os grupos e duplas');
} else {
  console.log('‚ùå FALHA: A l√≥gica n√£o est√° detectando os dados do sorteio corretamente');
}

if (!emptyHasDataFromDraw && !emptyTournamentHasData) {
  console.log('‚úÖ SUCESSO: Torneio vazio n√£o mostra dados (correto)');
} else {
  console.log('‚ö†Ô∏è ATEN√á√ÉO: Torneio vazio est√° mostrando dados incorretamente');
}
