// Referee and incident management types

export enum IncidentType {
  WARNING = 'WARNING',
  POINT_PENALTY = 'POINT_PENALTY', 
  GAME_PENALTY = 'GAME_PENALTY',
  MATCH_PENALTY = 'MATCH_PENALTY',
  DISQUALIFICATION = 'DISQUALIFICATION',
  CODE_VIOLATION = 'CODE_VIOLATION',
  TIME_VIOLATION = 'TIME_VIOLATION',
  OTHER = 'OTHER'
}

export interface MatchIncident {
  id?: string; // Optional - will be generated by DB
  matchId: string;
  tournamentId: string;
  participantId?: string;
  teamId?: string; // team1 or team2
  type: IncidentType;
  description: string;
  timestamp: string;
  registeredBy: string; // User ID of referee
  outcome?: string;
}

export interface Referee {
  id: string;
  userId: string;
  name: string;
  level: 'MAIN' | 'ASSISTANT' | 'VOLUNTEER';
  assignedMatches?: string[]; // Match IDs
  active: boolean;
  createdAt: string;
  user?: any; // User info from auth system
}

export interface MatchOfficials {
  matchId: string;
  mainRefereeId?: string;
  assistantRefereeId?: string;
  scorekeeperId?: string;
  assignedAt: string;
  assignedBy: string;
}

// Match status specific to referee operations
export enum MatchStatus {
  NOT_STARTED = 'NOT_STARTED',
  IN_PROGRESS = 'IN_PROGRESS',
  PAUSED = 'PAUSED',
  COMPLETED = 'COMPLETED',
  ABANDONED = 'ABANDONED',
  WALKOVER = 'WALKOVER'
}

// Challenge/video review system
export interface Challenge {
  id?: string;
  matchId: string;
  teamId: string; // team1 or team2
  timestamp: string;
  description: string;
  outcome: 'UPHELD' | 'REJECTED' | 'PENDING';
  remainingChallenges?: {
    team1: number;
    team2: number;
  }
}
